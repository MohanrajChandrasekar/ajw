'use strict';
var ejs = require('ejs');
var fs = require('fs');
var pdf = require('html-pdf');
var moment = require('moment');
var transporter = require('../../config/nodemailer').emailer;

exports.stationArrivalReportByRun = function (req, res) {
    console.log(req.body);
    var jsonContent = {
        companyName: "AJW Express Service Private Limited.",
        companyAddress: "Defence Colony 1st Ave, Ekkatuthangal, Chennai, Tamil Nadu - 600032",
        phone: "Contact: 044 2231 3000",
        reportName: "STATION ARRIVAL REPORT - MAWB NO:" + req.body[0].secMawbno + " / RUN NO:" + req.body[0].secRunno,
        logo: "",
        printedOn: moment().format('DD-MMM-YYYY')
    };
    jsonContent.recordSet = req.body;
    console.log(jsonContent.tblData);
    jsonContent.title = "AJW Express Service Private Limited";

    var options = {};

    options = {
        // Export options 
        "directory": "/tmp", // The directory the file gets written into if not using .toFile(filename, callback). default: '/tmp' 
        // Papersize Options: http://phantomjs.org/api/webpage/property/paper-size.html 
        "format": "A4", // allowed units: A3, A4, A5, Legal, Letter, Tabloid 
        "orientation": "portrait", // portrait or landscape 
        "margin": "0mm",
        "height": "8.3in", // allowed units: mm, cm, in, px 
        "width": "11.7in",
        // Page options 
        "border": "0mm", // default is 0, units: mm, cm, in, px 
        "margin-left": "0mm",
        "margin-right": "0mm",
        "margin-top": "0mm",
        "footer": {
            "height": "15mm",
            "contents": {
                // default: '<table class=\'tdCustom\'  style=\'font-size:8pt;border:0;margin-top:0pt;margin-left:30px;\'><tr><td class=\'tdCustom\'>Generated by cuteTime.</td><td class=\'tdCustom\' style=\'width:90pt; text-align:left\'>Print Date:</td><td class=\'tdCustom\' style=\'width:70pt; text-align:left\'></td><td class=\'tdCustom\' style=\'width:100pt; text-align:left\'>Approved By:</td><td class=\'tdCustom\' style=\'width:70pt; text-align:left\'></td><td class=\'tdCustom\' style=\'width:70pt; text-align:left\'>Approved Date:</td><td class=\'tdCustom\' style=\'width:70pt; text-align:left\'></td><td class=\'tdCustom\' style=\'width:150pt; text-align:right\'>Page {{page}} of {{pages}}</td></tr></table>'
            }
        },
        // Rendering options 
        "base": "file:///home/www/your-asset-path", // Base path that's used to load files (images, css, js) when they aren't referenced using a host 
        // Zooming option, can be used to scale images if `options.type` is not pdf 
        "zoomFactor": "1", // default is 1 
        // File options 
        "type": "pdf"
        //"phantomPath": "file:///D:/Utils/phantomjs-2.1.1-windows/bin/"
    };

    options.header = {
        "height": "45mm"
    };

    var cnNO = require('../barcode/barcode.read');
    var barcode = cnNO.base64data;
    jsonContent.barcode = "";

    fs.readFile('service//report//header//barcodeHeader1.html', 'utf8', headerReadResponse);

    function headerReadResponse(err, htmldata) {
        options.header.contents = ejs.render(htmldata, jsonContent);
        fs.readFile('service//report//footer//footer.html', 'utf8', footerReadResponse);
    }

    function footerReadResponse(err, htmldata) {
        options.footer.contents = ejs.render(htmldata, jsonContent);
        fs.readFile('service//report//html//stationReport.html', 'utf8', bodyReadResponse);
    }

    // function body make pdf
    var expectedContent;
    function bodyReadResponse(err, htmldata) {
        expectedContent = ejs.render(htmldata, jsonContent);
        var url = 'stationArrival.pdf';
        pdf.create(expectedContent, options).toFile(url, function (err, stream) {
            // var file1 = fs.createReadStream(url);
            // var stat = fs.statSync(url);
            // res.setHeader('Content-Length', stat.size);
            // res.setHeader('Content-Type', 'application/pdf');
            // res.setHeader('Accept', 'application/pdf');
            // res.setHeader('Content-Disposition', 'attachment; filename=quote.pdf');
            // file1.pipe(res);
            if (err) {
                  console.log(err);
                  return;
            }
            sendReportMail( function(result) {
                  res.send(result);      
            });
        });
    }
};

function sendReportMail(response) {
      
      URL = "www.ajwex.com";
      var messageBody = '';
      messageBody = "<html><body>";
      messageBody = messageBody + "<p>";
      messageBody = messageBody + "<b>STATION ARRIVAL BREAKUP REPORT</b>";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "DEAR TEAM,";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "<span>PFA</span>";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "REGARDS, ";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "AJW OPERATIONS";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "NOTE: auto generated email please do not reply";
      messageBody = messageBody + "<br />";
      messageBody = messageBody + "</p>";
      messageBody = messageBody + "</body></html>";

      var mailOptions = {
            to: 'india-customer-support@ajwex.com',
            subject: 'STATION ARRIVAL REPORT',
            body: messageBody,
            html: messageBody,
            bcc: 'larry@ajww.com, sree@ajwex.com, opsnysupport@ajwwbo.com, commandy@ajww.com, mvs@ajwex.com, alen@ajwwbo.com',
            frmId: 'ajw.autoemailer@gmail.com',
            attachments: [{
                  filename: 'STATION ARRIVAL',     
                  path: './stationArrival.pdf',                        
                  contentType: 'application/pdf'
            }]
      }
      
      transporter.sendMail(mailOptions, function (err, info) {
            if(err){
                  console.log(err);
                  let obj = {status: 500, message: 'Error while sending report!'};
                  response(obj);
            }else{
                  console.log(info);
                  let obj = {status: 200, message: 'Report send successfully!'};
                  response(obj);
            }
      });
}